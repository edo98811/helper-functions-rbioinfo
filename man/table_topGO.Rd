% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_topGO.R
\name{table_topGO}
\alias{table_topGO}
\title{Perform Gene Ontology Enrichment Analysis with topGO}
\usage{
table_topGO(params, contrast, se, myresuSet, report = FALSE)
}
\arguments{
\item{params}{A list containing the following elements:
\describe{
\item{\code{species}}{A character string specifying the species. Valid values are "Mm" for mouse and "Hs" for human.}
\item{\code{run_computations}}{A logical value indicating whether computations are run.}
}}

\item{contrast}{A character string specifying the contrast name for the analysis.}

\item{se}{A \code{SummarizedExperiment} object containing gene expression data.}

\item{myresuSet}{A list containing results of differential expression analysis, including a table of DE genes (\code{tbl_res_DE}).}

\item{report}{Logical. If \code{TRUE}, the results are displayed in a report-friendly format using \code{knitr::knit_print}. Default is \code{FALSE}.}
}
\value{
The function updates the \code{myresuSet} list with the enrichment results (\code{topGO_tbl}) for the specified contrast.
If no enriched pathways are found, a message is displayed. The results are printed or displayed in a report format based on the \code{report} parameter.
}
\description{
This function performs Gene Ontology (GO) enrichment analysis using the \code{topGO} package.
It identifies enriched biological pathways for a given contrast based on differentially expressed genes.
}
\details{
The function first identifies expressed genes based on the \code{SummarizedExperiment} object. It then performs GO enrichment analysis
using the \code{topGOtable} function from the \code{pcaExplorer} package. The enrichment is performed for the "Biological Process" (BP) ontology.
The function handles cases where no differentially expressed genes are found or when computations are skipped based on the \code{params$run_computations} flag.
}
\examples{
\dontrun{
table_topGO(
  contrast = "contrast1",
  se = mySummarizedExperiment,
  myresuSet = myResultsList,
  report = TRUE
)
}

}
